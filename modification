// ---------- Nouveau : contrôle des NOT NULL ----------
bool rowHasFatalNotNull = false;

foreach (var col in insertCols) // colonnes à insérer (hors identity)
{
    if (!row.ContainsKey(col)) continue;

    var rawObj = row[col];
    var rawStr = (rawObj ?? "").ToString();
    bool isVide = string.IsNullOrWhiteSpace(rawStr) || 
                  string.Equals(rawStr, "NULL", StringComparison.OrdinalIgnoreCase);

    if (!IsColumnNullable(tableName, col) && isVide)
    {
        var type = columnTypes[col]?.ToLowerInvariant() ?? "";
        bool estTexte = type.Contains("char") || type.Contains("text");

        if (estTexte)
        {
            // Pour les colonnes texte NOT NULL, on force une chaîne vide
            row[col] = "";
        }
        else
        {
            // Pour les colonnes numériques/dates NOT NULL -> ignorer la ligne
            rowHasFatalNotNull = true;
            Console.WriteLine($"[ERREUR INSERT] {tableName} : colonne NOT NULL '{col}' vide à la ligne {i + 1}. Ligne ignorée.");
            break;
        }
    }
    else if (isVide)
    {
        // Colonne nullable ou vide autorisée -> mettre NULL
        row[col] = null;
    }
}

if (rowHasFatalNotNull) { structureSkipped++; continue; }
// ---------- Fin du nouveau bloc ----------