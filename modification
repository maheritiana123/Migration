private void ImportTablesWithFKReadiness(IEnumerable<string> tables)
{
    var skipped = new List<string>();
    var pass = 1;

    foreach (var table in tables)
    {
        if (_importedTables.Contains(table)) continue;

        var fks = GetForeignKeyInfo(table);
        bool ready = fks.All(fk => _idMappings.ContainsKey(fk.ReferencedTableName));

        if (!ready)
        {
            Console.WriteLine($"[ATTENTE] (pass {pass}) {table} : FK non résolues. Mise en attente.");
            skipped.Add(table);
            continue;
        }

        Console.WriteLine($"[IMPORT] (pass {pass}) {table}");
        ImportTable(table);
        _importedTables.Add(table);
    }

    // Relancer la passe si des tables étaient en attente
    if (skipped.Count > 0)
    {
        if (pass > 5)
        {
            Console.WriteLine("⚠️ Trop de passes sans progrès. Tables restantes non résolues :");
            foreach (var t in skipped)
                Console.WriteLine($" - {t}");
            throw new Exception("Import bloqué : certaines dépendances FK n'ont pas pu être satisfaites.");
        }

        pass++;
        Console.WriteLine($"🔁 Nouvelle passe pour {skipped.Count} table(s) ignorée(s).");
        ImportTablesWithFKReadiness(skipped); // récursion contrôlée
    }
}



var nonRelationTables = importOrder
    .Where(t => !_pureRelations.Contains(t) && !_extendedRelations.Contains(t));

ImportTablesWithFKReadiness(nonRelationTables);