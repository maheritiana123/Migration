/// <summary>
/// Charge les tables de relation pures et étendues.
/// - Pure relation = uniquement des colonnes FK + éventuellement PK (aucune autre donnée métier)
/// - Relation étendue = FK + autres colonnes métier.
/// Remplit les collections _pureRelations et _extendedRelations.
/// </summary>
private void LoadRelationTables()
{
    _pureRelations = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
    _extendedRelations = new HashSet<string>(StringComparer.OrdinalIgnoreCase);

    var allTables = GetAllTables();

    foreach (var table in allTables)
    {
        var fks = GetForeignKeyInfo(table).ToList();
        if (fks.Count == 0)
            continue; // pas une table de relation

        // Liste des colonnes de la table
        var cols = GetTableColumns(table).ToList();

        // Colonnes PK
        var pkCols = GetPrimaryKeyColumn(table).ToList();

        // Colonnes non-FK
        var nonFkCols = cols
            .Where(c => !fks.Any(fk => fk.ColumnName.Equals(c, StringComparison.OrdinalIgnoreCase)))
            .ToList();

        // On ignore la PK si elle est aussi une FK (cas de table de jointure)
        var nonFkNonPkCols = nonFkCols
            .Where(c => !pkCols.Contains(c, StringComparer.OrdinalIgnoreCase))
            .ToList();

        if (nonFkNonPkCols.Count == 0)
        {
            // uniquement des FK (et PK) => pure relation
            _pureRelations.Add(table);
        }
        else
        {
            // FK + autres colonnes => relation étendue
            _extendedRelations.Add(table);
        }
    }

    Console.WriteLine($"Tables relation pures  : {string.Join(", ", _pureRelations)}");
    Console.WriteLine($"Tables relation étendues: {string.Join(", ", _extendedRelations)}");
}