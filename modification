-- (optionnel) USE TonBase;
SET NOCOUNT ON;

------------------------------------------------------------
-- 1) Construire @ValuesBatch correctement
--    Row1  : VENom='improbable_12055', ADVAR=12055
--    Row2  : VENom='vraimentimprobable_23055', ADVAR=NULL
--    Séparateur de colonnes = NCHAR(29), de lignes = NCHAR(30)
------------------------------------------------------------
DECLARE @row1 NVARCHAR(MAX) = N'''improbable_12055''' + NCHAR(29) + N'12055';
DECLARE @row2 NVARCHAR(MAX) = N'''vraimentimprobable_23055''' + NCHAR(29) + N'NULL';

DECLARE @ValuesBatch NVARCHAR(MAX) = @row1 + NCHAR(30) + @row2;

-- Aperçu lisible des séparateurs (␝ = col, ␞ = row)
SELECT REPLACE(REPLACE(@ValuesBatch, NCHAR(30), N'␞'), NCHAR(29), N'␝') AS Preview;

------------------------------------------------------------
-- 2) Appel de la procédure
--    IMPORTANT :
--      - @Columns doit être dans le même ordre que les tokens de chaque ligne
--      - Les valeurs texte DOIVENT être entre quotes dans @ValuesBatch (ex: ''foo'')
--      - Les NULL ne doivent pas être quotés (N'NULL')
------------------------------------------------------------
DECLARE @return_value INT;

EXEC @return_value = dbo.batch_safe_insert_with_type_conversion
    @TableName   = N'VarEnv',
    @Columns     = N'[VENom],[ADVAR]',
    @ValuesBatch = @ValuesBatch,
    @HasIdentity = 1,
    @IdentityCol = N'VEId';

-- La proc renvoie un jeu de résultats : RowIndex | NewID | ErrorMessage
-- RowIndex = numéro de ligne du batch (1, 2, ...)

SELECT 'Return Value' = @return_value;

------------------------------------------------------------
-- 3) Vérification rapide côté table
------------------------------------------------------------
SELECT TOP (10) VEId, VENom, ADVAR
FROM dbo.VarEnv
WHERE VENom IN (N'improbable_12055', N'vraimentimprobable_23055')
ORDER BY VEId DESC;