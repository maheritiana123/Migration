int rows = sql.ReturnedRows(1, 1);
for (int i = 1; i <= rows; i++)
{
    int rowIndex = 0; int.TryParse(sql.GetValueUsingColName(i, "RowIndex", 1, 1), out rowIndex);
    string err = sql.GetValueUsingColName(i, "ErrorMessage", 1, 1);

    // récupère la ligne d’origine (alignée sur RowIndex 1..N du batch)
    Dictionary<string, object> rowForReject = null;
    if (rowIndex >= 1 && rowIndex <= batchRows.Count)
        rowForReject = batchRows[rowIndex - 1];

    if (!string.IsNullOrEmpty(err))
    {
        if (err.IndexOf("Doublon", StringComparison.OrdinalIgnoreCase) >= 0)
        {
            duplicates++;
            if (rowForReject != null)
                AppendRejectedRow(tableName, insertCols, rowForReject, "Doublon");
        }
        else
        {
            errors++;
            Console.WriteLine($"[ERREUR INSERT] {tableName} (batch row {rowIndex}) : {err}");
            if (rowForReject != null)
                AppendRejectedRow(tableName, insertCols, rowForReject, err);
        }
        continue;
    }

    inserted++;
}