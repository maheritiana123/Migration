-- repère : juste APRÈS
--   INSERT INTO @colList (ColName, Ord) ... dbo.SplitByCommaOrdered(@Columns)

-- 2a) Colonnes NOT NULL qui ont un DEFAULT → on peut substituer NULL par DEFAULT
DECLARE @defaultable TABLE(Ord int PRIMARY KEY);
INSERT INTO @defaultable(Ord)
SELECT c.Ord
FROM @colList c
JOIN INFORMATION_SCHEMA.COLUMNS ic
  ON ic.TABLE_NAME = @TableName
 AND ic.COLUMN_NAME = c.ColName
LEFT JOIN sys.default_constraints dc
  ON dc.parent_object_id = OBJECT_ID(QUOTENAME(@TableName))
 AND dc.parent_column_id = COLUMNPROPERTY(OBJECT_ID(@TableName), c.ColName, 'ColumnId')
WHERE ic.IS_NULLABLE = 'NO'
  AND dc.object_id IS NOT NULL;  -- colonne possède un DEFAULT



DECLARE @values NVARCHAR(MAX) = N'';
SELECT @values = STRING_AGG(
         CASE 
           WHEN UPPER(LTRIM(RTRIM(v.Val))) = 'NULL' 
                AND EXISTS (SELECT 1 FROM @defaultable d WHERE d.Ord = v.Ord)
             THEN 'DEFAULT'
           ELSE v.Val
         END
       , ',') WITHIN GROUP (ORDER BY v.Ord)
FROM @valList v;



EXEC sp_executesql
    @sql,
    N'@nid nvarchar(100) OUTPUT',
    @nid = @newId OUTPUT;

IF @newId IS NULL OR @newId = N''
BEGIN
    -- Fallback: relire via PK/UNIQUE si on a un WHERE
    IF LEN(ISNULL(@whereClause, N'')) > 0 AND @IdentityCol IS NOT NULL
    BEGIN
        DECLARE @selIdSql nvarchar(max) = 
            N'SELECT @nid = CONVERT(nvarchar(100), ' + QUOTENAME(@IdentityCol) + N') ' +
            N'FROM ' + QUOTENAME(@TableName) + N' WITH (NOLOCK) WHERE ' + @whereClause + N';';

        DECLARE @nid2 nvarchar(100) = NULL;
        EXEC sp_executesql @selIdSql, N'@nid nvarchar(100) OUTPUT', @nid = @nid2 OUTPUT;

        IF @nid2 IS NOT NULL AND @nid2 <> N''
        BEGIN
            SET @newId = @nid2;
        END
    END
END

IF @newId IS NULL OR @newId = N''
BEGIN
    INSERT INTO @out(RowIndex, NewID, ErrorMessage)
    VALUES(@rowIdx, NULL, N'ERR: aucune ligne insérée (SCOPE_IDENTITY() vide) | vals=' + @values);
END
ELSE
BEGIN
    INSERT INTO @out(RowIndex, NewID, ErrorMessage)
    VALUES(@rowIdx, @newId, NULL);
END