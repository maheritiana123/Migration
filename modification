private void ExportTableToCsv(string tableName)
{
    var query = $"SELECT * FROM [{tableName}]";

    DynamicSql sql = new DynamicSql();
    sql.Dsn = "PXE1_PXE";
    sql.AddDirectRequest(query, MidwSqlXmlMode.MIDW_SQL_XMLMODE_RAW);
    sql.SetSite(Environment.GetEnvironmentVariable("PFTLSITE"));
    sql.Execute(30000);
    Dictionary<string,object> result = new Dictionary<string,object>();
    for (int i = 1; i <= sql.ReturnedRows(1, 1); i++)
    {
        string column = sql.GetColName(i, 1, 1);
        string row = sql.GetValueUsingColName(i, column, 1, 1);
        result.Add(column, row);
    }
    // Doit retourner : (List<string> columnNames, List<object[]> rows)

    var columnNames = result.ColumnNames;
    var rows = result.Rows;

    if (rows.Count == 0)
    {
        Console.WriteLine($"âš  Table vide : {tableName}");
        return;
    }

    var csvPath = Path.Combine(_exportDirectory, $"{tableName}.csv");

    using var writer = new StreamWriter(csvPath, false, Encoding.UTF8);

    // ðŸ“Œ Ã‰crire lâ€™en-tÃªte
    writer.WriteLine(string.Join(";", columnNames.Select(EscapeCsvValue)));

    // ðŸ“Œ Ã‰crire les donnÃ©es
    foreach (var row in rows)
    {
        var line = string.Join(";", row.Select(EscapeCsvValue));
        writer.WriteLine(line);
    }
}
