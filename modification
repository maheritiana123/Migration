private string FormatValueForSql(object value, string columnType)
{
    if (value == null || value == DBNull.Value)
        return "NULL";

    string strValue = value.ToString();

    if (string.IsNullOrWhiteSpace(strValue) || strValue.Equals("NULL", StringComparison.OrdinalIgnoreCase))
        return "NULL";

    // Types texte
    if (columnType.Contains("char", StringComparison.OrdinalIgnoreCase) ||
        columnType.Contains("text", StringComparison.OrdinalIgnoreCase) ||
        columnType.Contains("nchar", StringComparison.OrdinalIgnoreCase) ||
        columnType.Contains("ntext", StringComparison.OrdinalIgnoreCase) ||
        columnType.Contains("nvarchar", StringComparison.OrdinalIgnoreCase))
    {
        return $"'{strValue.Replace("'", "''")}'";
    }

    // Types date/heure
    if (columnType.Contains("date", StringComparison.OrdinalIgnoreCase) ||
        columnType.Contains("time", StringComparison.OrdinalIgnoreCase))
    {
        return $"'{strValue}'";
    }

    // Valeurs num√©riques ou autres
    return strValue;
}
private (string insertColumns, string insertValues) BuildInsertParameters(Dictionary<string, object> rowDict, string tableName)
{
    var columns = new List<string>();
    var values = new List<string>();

    foreach (var kvp in rowDict)
    {
        string colName = kvp.Key;
        object colValue = kvp.Value;
        string colType = GetColumnType(tableName, colName);

        columns.Add($"[{colName}]");
        values.Add(FormatValueForSql(colValue, colType));
    }

    return (string.Join(",", columns), string.Join(",", values));
}
