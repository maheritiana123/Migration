// Cache local (clé: table) -> (col -> bool IsNullable)
private readonly Dictionary<string, Dictionary<string, bool>> _nullabilityCache =
    new(StringComparer.OrdinalIgnoreCase);

private bool IsColumnNullableSql(string table, string column)
{
    if (!_nullabilityCache.TryGetValue(table, out var map))
    {
        map = new Dictionary<string, bool>(StringComparer.OrdinalIgnoreCase);
        _nullabilityCache[table] = map;

        // Charge toutes les colonnes de la table d’un coup (plus rapide)
        using var cn = GetSqlConnection(); // ton util d’accès SQL
        using var cmd = cn.CreateCommand();
        cmd.CommandText = @"
SELECT c.name AS ColName, c.is_nullable
FROM sys.tables t
JOIN sys.schemas s ON s.schema_id = t.schema_id
JOIN sys.columns c ON c.object_id = t.object_id
WHERE s.name = 'dbo' AND t.name = @tbl;";
        cmd.Parameters.AddWithValue("@tbl", table);
        using var rd = cmd.ExecuteReader();
        while (rd.Read())
            map[rd.GetString(0)] = rd.GetBoolean(1);
    }
    return map.TryGetValue(column, out var nul) ? nul : true; // par défaut: prudent
}